#include "DrEffect.h"

void DrEffect::Initialize(){
  /// The numbers refers to Stephens Mora Tka'cik Bialek Thermodynamics of natural images
  Patch = (int **)calloc(49,sizeof(int));
  for(int i=0;i<49;i++)
    Patch[i] = (int *)calloc(4*4,sizeof(int));
  int np = 0;
  Patch[np][0 ] = 1;Patch[np][1 ] = 1;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 1;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 1;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 1;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 1;
  np = 1;
  Mat->Transform(Patch[np],Patch[0],4,OP_INVERT);
  np = 2;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 0;Patch[np][5 ] = 0;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 0;Patch[np][9 ] = 0;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 0;Patch[np][13] = 0;Patch[np][14] = 1;Patch[np][15] = 1;
  np = 4;
  Mat->Transform(Patch[np],Patch[2],4,OP_INVERT);
  np = 13;
  Mat->Transform(Patch[np],Patch[2],4,OP_ROT_90);
  np = 12;
  Mat->Transform(Patch[np],Patch[13],4,OP_INVERT);
  np = 3;
  Patch[np][0 ] = 1;Patch[np][1 ] = 1;Patch[np][2 ] = 1;Patch[np][3 ] = 0;
  Patch[np][4 ] = 1;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 0;
  Patch[np][8 ] = 1;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 0;
  Patch[np][12] = 1;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 0;
  np = 5;
  Mat->Transform(Patch[np],Patch[3],4,OP_MIRROR);
  np = 6;
  Mat->Transform(Patch[np],Patch[3],4,OP_INVERT);
  np = 7;
  Mat->Transform(Patch[np],Patch[6],4,OP_MIRROR);
  np = 8;
  Mat->Transform(Patch[np],Patch[3],4,OP_ROT_90);
  np = 9;
  Mat->Transform(Patch[np],Patch[8],4,OP_ROT_180);
  np = 10;
  Mat->Transform(Patch[np],Patch[9],4,OP_INVERT);
  np = 11;
  Mat->Transform(Patch[np],Patch[8],4,OP_INVERT);
  np = 14;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 0;Patch[np][3 ] = 0;
  Patch[np][4 ] = 0;Patch[np][5 ] = 0;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 1;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 1;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 1;
  np = 16;
  Mat->Transform(Patch[np],Patch[14],4,OP_MIRROR);
  np = 21;
  Mat->Transform(Patch[np],Patch[16],4,OP_INVERT);
  np = 22;
  Mat->Transform(Patch[np],Patch[14],4,OP_INVERT);
  np = 17;
  Mat->Transform(Patch[np],Patch[21],4,OP_ROT_180);
  np = 20;
  Mat->Transform(Patch[np],Patch[17],4,OP_MIRROR);
  np = 18;
  Mat->Transform(Patch[np],Patch[20],4,OP_INVERT);
  np = 19;
  Mat->Transform(Patch[np],Patch[18],4,OP_MIRROR);
  np = 15;
  Patch[np][0 ] = 0;Patch[np][1 ] = 1;Patch[np][2 ] = 1;Patch[np][3 ] = 0;
  Patch[np][4 ] = 0;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 0;
  Patch[np][8 ] = 0;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 0;
  Patch[np][12] = 0;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 0;
  np = 23;
  Mat->Transform(Patch[np],Patch[15],4,OP_INVERT);
  np = 33;
  Mat->Transform(Patch[np],Patch[23],4,OP_ROT_90);
  np = 35;
  Mat->Transform(Patch[np],Patch[15],4,OP_ROT_90);
  np = 24;
  Patch[np][0 ] = 1;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 1;Patch[np][5 ] = 0;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 1;Patch[np][9 ] = 0;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 1;Patch[np][13] = 0;Patch[np][14] = 1;Patch[np][15] = 1;
  np = 25;
  Mat->Transform(Patch[np],Patch[24],4,OP_MIRROR);
  np = 26;
  Mat->Transform(Patch[np],Patch[24],4,OP_INVERT);
  np = 27;
  Mat->Transform(Patch[np],Patch[26],4,OP_MIRROR);
  np = 28;
  Mat->Transform(Patch[np],Patch[24],4,OP_ROT_90);
  np = 29;
  Mat->Transform(Patch[np],Patch[28],4,OP_ROT_180);
  np = 30;
  Mat->Transform(Patch[np],Patch[29],4,OP_INVERT);
  np = 31;
  Mat->Transform(Patch[np],Patch[30],4,OP_ROT_180);
  np = 32;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 0;Patch[np][5 ] = 0;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 0;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 0;
  Patch[np][12] = 0;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 0;
  np = 34;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 0;
  Patch[np][4 ] = 0;Patch[np][5 ] = 0;Patch[np][6 ] = 1;Patch[np][7 ] = 0;
  Patch[np][8 ] = 0;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 0;
  Patch[np][12] = 0;Patch[np][13] = 1;Patch[np][14] = 1;Patch[np][15] = 0;
  np = 36;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 0;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 0;
  Patch[np][8 ] = 1;Patch[np][9 ] = 1;Patch[np][10] = 0;Patch[np][11] = 0;
  Patch[np][12] = 1;Patch[np][13] = 0;Patch[np][14] = 0;Patch[np][15] = 0;
  np = 37;
  Mat->Transform(Patch[np],Patch[36],4,OP_ROT_180);
  np = 38;
  Mat->Transform(Patch[np],Patch[37],4,OP_INVERT);
  np = 39;
  Mat->Transform(Patch[np],Patch[37],4,OP_ROT_90);
  np = 42;
  Mat->Transform(Patch[np],Patch[36],4,OP_ROT_90);
  np = 43;
  Mat->Transform(Patch[np],Patch[42],4,OP_INVERT);
  np = 40;
  Patch[np][0 ] = 1;Patch[np][1 ] = 1;Patch[np][2 ] = 0;Patch[np][3 ] = 0;
  Patch[np][4 ] = 1;Patch[np][5 ] = 0;Patch[np][6 ] = 0;Patch[np][7 ] = 1;
  Patch[np][8 ] = 0;Patch[np][9 ] = 0;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 0;Patch[np][13] = 0;Patch[np][14] = 1;Patch[np][15] = 1;
  np = 41;
  Patch[np][0 ] = 0;Patch[np][1 ] = 0;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 0;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 0;
  Patch[np][8 ] = 0;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 0;
  Patch[np][12] = 1;Patch[np][13] = 1;Patch[np][14] = 0;Patch[np][15] = 0;
  np = 44;
  Mat->Transform(Patch[np],Patch[41],4,OP_MIRROR);
  np = 46;
  Mat->Transform(Patch[np],Patch[44],4,OP_INVERT);
  np = 45;
  Patch[np][0 ] = 1;Patch[np][1 ] = 0;Patch[np][2 ] = 0;Patch[np][3 ] = 1;
  Patch[np][4 ] = 1;Patch[np][5 ] = 1;Patch[np][6 ] = 1;Patch[np][7 ] = 1;
  Patch[np][8 ] = 0;Patch[np][9 ] = 0;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 0;Patch[np][13] = 0;Patch[np][14] = 0;Patch[np][15] = 0;
  np = 47;
  Patch[np][0 ] = 1;Patch[np][1 ] = 1;Patch[np][2 ] = 1;Patch[np][3 ] = 1;
  Patch[np][4 ] = 0;Patch[np][5 ] = 0;Patch[np][6 ] = 0;Patch[np][7 ] = 0;
  Patch[np][8 ] = 1;Patch[np][9 ] = 1;Patch[np][10] = 1;Patch[np][11] = 1;
  Patch[np][12] = 0;Patch[np][13] = 0;Patch[np][14] = 0;Patch[np][15] = 0;
  np = 48;
  Mat->Transform(Patch[np],Patch[47],4,OP_INVERT);
  return;
  FILE *Ciccia = fopen("Patches.xvl","w");
  double Spaz = 1./46.;
  double Riga = 0.;
  double Col  = 0.;
  fprintf(Ciccia,"#l(1. 1. 1.) v[46]");
  for(int j=0;j<7;j++){
    for(int r=0;r<4;r++){
      for(int i=0;i<7;i++){
	for(int c=0;c<4;c++){
	  fprintf(Ciccia,"{x(%lf %lf %lf) ",Riga,Col,0.);
	  double Colore = Patch[7*j+i][r*4+c] == 0 ? 0. : 1.0;
	  fprintf(Ciccia,"v(%lf %lf %lf) }\n",Colore,Colore,Colore);
	  Col += Spaz;
	}
	Col += 2.*Spaz;
      }
      Riga += Spaz;
      Col = 0.;
    }
    Riga += 2.*Spaz;
  }
}
