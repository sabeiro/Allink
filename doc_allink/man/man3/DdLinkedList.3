.TH "DdLinkedList" 3 "Fri Aug 17 2018" "Version v0.1" "Allink" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DdLinkedList \- Domain decomposition as pointer to linked particles\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Cubo\&.h>\fP
.PP
Inherits \fBDomDecBasics\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDdLinkedList\fP (double \fBEdge\fP[3], int \fBNPart\fP, double \fBCutOff\fP)"
.br
.RI "\fIAllocate\&. \fP"
.ti -1c
.RI "void \fBErase\fP ()"
.br
.RI "\fIErase the pairlist\&. \fP"
.ti -1c
.RI "void \fBClear\fP ()"
.br
.RI "\fIClear the pairlist\&. \fP"
.ti -1c
.RI "int \fBSwapPart\fP (int p1, double *Pos1, int p2, double *Pos2)"
.br
.RI "\fISwap two particles\&. \fP"
.ti -1c
.RI "void \fBAddPart\fP (const int p, double *Pos)"
.br
.RI "\fIAdd a particle to the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p, double *Pos)"
.br
.RI "\fIRemove a particle form the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p)"
.br
.RI "\fIRemove the particle p\&. \fP"
.ti -1c
.RI "void \fBAddPart\fP (const int p, const int c)"
.br
.RI "\fIAdd a particle to the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p, const int c)"
.br
.RI "\fIRemove a particle form the cell c\&. \fP"
.ti -1c
.RI "void \fBMovePart\fP (const int p, double *OldPos, double *NewPos)"
.br
.RI "\fIMove a particle form the cell c1 to the cell c2\&. \fP"
.ti -1c
.RI "void \fBMovePart\fP (const int p, double *NewPos)"
.br
.RI "\fIMove a particle form the cell c1 to the cell c2\&. \fP"
.ti -1c
.RI "int \fBPosRet\fP (const double Pos[3])"
.br
.RI "\fIRelative position in the cell\&. \fP"
.ti -1c
.RI "int \fBpNPart\fP (const int c)"
.br
.RI "\fI
.SH "part in the cell"
.PP
\fP"
.ti -1c
.RI "int \fBpNPart\fP ()"
.br
.RI "\fI
.SH "part in the class"
.PP
\fP"
.ti -1c
.RI "int \fBpCell\fP (const int p)"
.br
.RI "\fIPrint the cell which the particle belong\&. \fP"
.ti -1c
.RI "int \fBFirst\fP (const int c)"
.br
.RI "\fIFirst part in the cell\&. \fP"
.ti -1c
.RI "int \fBNext\fP (const int p)"
.br
.RI "\fINext linked part\&. \fP"
.ti -1c
.RI "int \fBItCell\fP (const int c)"
.br
.RI "\fIIterate in the cell\&. \fP"
.ti -1c
.RI "int \fBIfItCell\fP (const int c)"
.br
.RI "\fIStop the loop and set the counter to zero\&. \fP"
.ti -1c
.RI "int \fBIfItCouple\fP (const int c)"
.br
.RI "\fIStop the loop and set the counter to zero\&. \fP"
.ti -1c
.RI "int \fBSetCoorNumb\fP (double *Pos, int p)"
.br
.RI "\fISet the coordination umber to the part p\&. \fP"
.ti -1c
.RI "int \fBGetNei\fP (double *Pos, int *NeiList)"
.br
.RI "\fIChoose among the different neighbouring lists\&. \fP"
.ti -1c
.RI "void \fBSetCounters\fP (int c)"
.br
.RI "\fISet the counters to the initial position\&. \fP"
.ti -1c
.RI "void \fBCouple\fP (const int c, int *p1, int *p2)"
.br
.RI "\fIIterates along all couples\&. \fP"
.ti -1c
.RI "void \fBPrintCell\fP (const int c)"
.br
.RI "\fIPrint the particles in a cell\&. \fP"
.ti -1c
.RI "void \fBPrintCells\fP ()"
.br
.RI "\fIPrint the the particles in the cells\&. \fP"
.ti -1c
.RI "void \fBSetCurr\fP (int p)"
.br
.RI "\fIGather information of the neighbouring cells\&. \fP"
.ti -1c
.RI "void \fBSetCurrGhost\fP (double *Pos)"
.br
.RI "\fIGather information of the neighbouring cells\&. \fP"
.ti -1c
.RI "void \fBNextCurr\fP ()"
.br
.RI "\fIIncrease the iterator to the next couple\&. \fP"
.ti -1c
.RI "void \fBNextCurrGhost\fP ()"
.br
.RI "\fIIncrease the iterator to the next couple\&. \fP"
.ti -1c
.RI "int \fBIfCurr\fP ()"
.br
.RI "\fITell when the curr loop is over\&. \fP"
.ti -1c
.RI "int \fBIfCurrGhost\fP ()"
.br
.RI "\fITell when the curr loop is over\&. \fP"
.ti -1c
.RI "void \fBDist2Curr\fP (double *DistRel)"
.br
.RI "\fIRetrun the squared current interparticle distance\&. \fP"
.ti -1c
.RI "void \fBDist2CurrGhost\fP (double *DistRel)"
.br
.RI "\fIRetrun the squared current interparticle distance\&. \fP"
.ti -1c
.RI "void \fBPrintList\fP (const int c)"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBPrintLists\fP ()"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBCheckList\fP ()"
.br
.RI "\fICheck the list\&. \fP"
.ti -1c
.RI "void \fBCheckNei\fP (int p)"
.br
.RI "\fICheck the neighbours\&. \fP"
.ti -1c
.RI "void \fBIncrCurr\fP (const int c)"
.br
.RI "\fIIncrement the current part in the cell\&. \fP"
.ti -1c
.RI "void \fBIncrCurrList\fP (const int c)"
.br
.RI "\fIIncrement the current iterators in the cell\&. \fP"
.ti -1c
.RI "int \fBFindClosest\fP (int p1)"
.br
.RI "\fIFind the closest neighbour\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDomCell\fP * \fBCella\fP"
.br
.RI "\fINumber of particles and iterators per cell\&. \fP"
.ti -1c
.RI "\fBDOMAIN_PART\fP * \fBPc\fP"
.br
.RI "\fIList of position of the particles\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Domain decomposition as pointer to linked particles\&. 
.PP
Definition at line 162 of file Cubo\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDdLinkedList\fP (double Edge[3], int NPart, double CutOff)"

.PP
Allocate\&. Constructor for the domain decomposition with the linked list\&. 
.PP
Definition at line 232 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::Edge, DomDecBasics::InvEdge, DomDecBasics::Mod10, DomDecBasics::NAllocP, DomDecBasics::NCell, DomDecBasics::NPart, DomDecBasics::NSect, DomDecBasics::SetCutOff(), and DomDecBasics::SigErr()\&.
.SH "Member Function Documentation"
.PP 
.SS "void Erase ()"

.PP
Erase the pairlist\&. Empty the records of the cells\&. 
.PP
Definition at line 258 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NCell, and DomDecBasics::NPart\&.
.PP
Referenced by Forces::Dynamics(), Forces::MinimalNrg(), and Forces::ReOpen()\&.
.SS "void AddPart (const int p, double * Pos)"

.PP
Add a particle to the cell c\&. Add a part to the correspondent cell\&. 
.PP
Definition at line 276 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::pCella()\&.
.PP
Referenced by Forces::AllocMethod(), VarData::ConnectLineChain(), VarData::ConnectLineChain3(), Forces::ConsiderCh(), Forces::Dynamics(), VarData::FindNeighbours(), Forces::InsertBead(), Forces::InsertChBias(), Forces::MinimalNrg(), Forces::RemoveChBias(), and Forces::ReOpen()\&.
.SS "void RemPart (const int p, double * Pos)"

.PP
Remove a particle form the cell c\&. Remove particle from the cell\&. 
.PP
Definition at line 307 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::pCella()\&.
.PP
Referenced by Forces::IgnoreCh(), Forces::RemChFromSys(), Forces::RemoveChBias(), Forces::TryInsert(), Forces::TryRemove(), and Forces::WidomInsert()\&.
.SS "void RemPart (const int p)"

.PP
Remove the particle p\&. Remove a part to the correspondent cell\&. 
.PP
Definition at line 336 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::SigErr()\&.
.SS "void AddPart (const int p, const int c)"

.PP
Add a particle to the cell c\&. Add a part to the correspondent cell\&. 
.PP
Definition at line 285 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NAllocP, DomDecBasics::NPart, and DomDecBasics::SigErr()\&.
.SS "void RemPart (const int p, const int c)"

.PP
Remove a particle form the cell c\&. Remove a part to the correspondent cell\&. 
.PP
Definition at line 312 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NAllocP, DomDecBasics::NPart, and DomDecBasics::SigErr()\&.
.SS "void MovePart (const int p, double * OldPos, double * NewPos)"

.PP
Move a particle form the cell c1 to the cell c2\&. Shift a particle from one position to its new\&. 
.PP
Definition at line 403 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::pCella()\&.
.PP
Referenced by Forces::TryMove()\&.
.SS "void MovePart (const int p, double * NewPos)"

.PP
Move a particle form the cell c1 to the cell c2\&. Shift a particle from one position to its new\&. 
.PP
Definition at line 393 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::pCella()\&.
.SS "int IfItCell (const int c)"

.PP
Stop the loop and set the counter to zero\&. Return 0 when the loop inside the cell is over\&. 
.PP
Definition at line 427 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.PP
Referenced by VarData::FindNeighbours()\&.
.SS "int IfItCouple (const int c)"

.PP
Stop the loop and set the counter to zero\&. Return zero when both iterators are over the loop\&. 
.PP
Definition at line 572 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.SS "int SetCoorNumb (double * Pos, int p)"

.PP
Set the coordination umber to the part p\&. Coordination number of the particle in the cell\&. 
.PP
Definition at line 271 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::GetCoorNumb()\&.
.SS "void SetCounters (int c)"

.PP
Set the counters to the initial position\&. Set the counters to the first particle of the cell c1 for the first loop\&. 
.PP
Definition at line 413 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NCell, and DomDecBasics::NPart\&.
.PP
Referenced by VarData::FindNeighbours()\&.
.SS "void Couple (const int c, int * p1, int * p2)"

.PP
Iterates along all couples\&. Associate the two iterator of the cell to the particles p1 and p2\&. 
.PP
Definition at line 565 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NAllocP, and DomDecBasics::SigErr()\&.
.SS "void PrintCell (const int c)"

.PP
Print the particles in a cell\&. Print the content of the cell\&. 
.PP
Definition at line 439 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.SS "void PrintCells ()"

.PP
Print the the particles in the cells\&. Print the content of all cells\&. 
.PP
Definition at line 446 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NCell, and DomDecBasics::PrintCell()\&.
.SS "void SetCurr (int p)"

.PP
Gather information of the neighbouring cells\&. Set the iterators for the current particle and build the list of neighbouring cells\&. 
.PP
Definition at line 453 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::cCurr, DomDecBasics::IfLoopCurr, DomDecBasics::NeiListCurr, DomDecBasics::NNeiCurr, DomDecBasics::nNeiCurr, DomDecBasics::p1Curr, DomDecBasics::p2Curr, and DomDecBasics::SigErr()\&.
.PP
Referenced by Forces::AddDens(), Forces::CalcForcesDensFunc(), Forces::CalcPairwise(), Forces::CalcPairwiseCh(), Forces::CalcTens(), Forces::CheckDomDec(), Forces::CheckPairList(), VarData::ConnectLineChain(), VarData::ConnectLineChain3(), Forces::DensFuncNrgChInternal(), Forces::DensFuncNrgGhostInternal(), Forces::MinimalNrg(), Forces::NrgStep(), Forces::NrgStepCh(), Forces::RemDens(), and Forces::SumForcesMD()\&.
.SS "int IfCurr ()"

.PP
Tell when the curr loop is over\&. Set the iterators for the current ghost particle and build the list of neighbouring cells\&. 
.PP
Definition at line 498 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::IfLoopCurr\&.
.PP
Referenced by Forces::AddDens(), Forces::CalcForcesDensFunc(), Forces::CalcPairwise(), Forces::CalcPairwiseCh(), Forces::CalcTens(), Forces::CheckDomDec(), Forces::CheckPairList(), VarData::ConnectLineChain(), VarData::ConnectLineChain3(), Forces::DensFuncNrgChInternal(), Forces::DensFuncNrgGhostInternal(), Forces::MinimalNrg(), Forces::NrgStep(), Forces::NrgStepCh(), Forces::RemDens(), and Forces::SumForcesMD()\&.
.SS "void Dist2Curr (double * DistRel)"

.PP
Retrun the squared current interparticle distance\&. Iterate one step and return the position\&. 
.PP
Definition at line 502 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::Edge, DomDecBasics::InvEdge, DomDecBasics::p1Curr, and DomDecBasics::p2Curr\&.
.PP
Referenced by Forces::AddDens(), Forces::CalcForcesDensFunc(), Forces::CalcPairwise(), Forces::CalcPairwiseCh(), Forces::CalcTens(), Forces::CheckDomDec(), Forces::CheckPairList(), VarData::ConnectLineChain3(), Forces::DensFuncNrgChInternal(), Forces::DensFuncNrgGhostInternal(), Forces::MinimalNrg(), Forces::NrgStep(), Forces::NrgStepCh(), Forces::RemDens(), and Forces::SumForcesMD()\&.
.SS "void Dist2CurrGhost (double * DistRel)"

.PP
Retrun the squared current interparticle distance\&. Iterate one step and return the position\&. 
.PP
Definition at line 554 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::Edge, DomDecBasics::InvEdge, DomDecBasics::p2Curr, and DomDecBasics::PosCurr\&.
.PP
Referenced by Forces::DensFuncNrgGhost()\&.
.SS "void IncrCurr (const int c)"

.PP
Increment the current part in the cell\&. Increment the iterator to the next particle\&. 
.PP
Definition at line 435 of file Cubo\&.cpp\&.
.PP
Referenced by VarData::FindNeighbours()\&.
.SS "void IncrCurrList (const int c)"

.PP
Increment the current iterators in the cell\&. Increment the second iterator and the first when the second is over the loop\&. 
.PP
Definition at line 582 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NAllocP, and DomDecBasics::SigErr()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Allink from the source code\&.
