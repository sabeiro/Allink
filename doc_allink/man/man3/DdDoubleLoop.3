.TH "DdDoubleLoop" 3 "Fri Aug 17 2018" "Version v0.1" "Allink" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DdDoubleLoop \- Stupid double loop to check the other pair loops\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Cubo\&.h>\fP
.PP
Inherits \fBDomDecBasics\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDdDoubleLoop\fP (double \fBEdge\fP[3], int \fBNPart\fP, double \fBCutOff\fP)"
.br
.RI "\fIAllocate\&. \fP"
.ti -1c
.RI "void \fBErase\fP ()"
.br
.RI "\fIErase the pairlist\&. \fP"
.ti -1c
.RI "void \fBClear\fP ()"
.br
.RI "\fIClear the pairlist\&. \fP"
.ti -1c
.RI "int \fBSwapPart\fP (int p1, double *Pos1, int p2, double *Pos2)"
.br
.RI "\fISwap two particles\&. \fP"
.ti -1c
.RI "void \fBAddPart\fP (const int p, double *Pos)"
.br
.RI "\fIAdd a particle to the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p, double *Pos)"
.br
.RI "\fIRemove a particle form the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p)"
.br
.RI "\fIRemove the particle p\&. \fP"
.ti -1c
.RI "void \fBAddPart\fP (const int p, const int c)"
.br
.RI "\fIAdd a particle to the cell c\&. \fP"
.ti -1c
.RI "void \fBRemPart\fP (const int p, const int c)"
.br
.RI "\fIRemove a particle form the cell c\&. \fP"
.ti -1c
.RI "void \fBMovePart\fP (const int p, double *OldPos, double *NewPos)"
.br
.RI "\fIMove a particle form the cell c1 to the cell c2\&. \fP"
.ti -1c
.RI "void \fBMovePart\fP (const int p, double *NewPos)"
.br
.RI "\fIMove a particle form the cell c1 to the cell c2\&. \fP"
.ti -1c
.RI "int \fBPosRet\fP (const double Pos[3])"
.br
.RI "\fIRelative position in the cell\&. \fP"
.ti -1c
.RI "int \fBpNPart\fP (const int c)"
.br
.RI "\fI
.SH "part in the cell"
.PP
\fP"
.ti -1c
.RI "int \fBpNPart\fP ()"
.br
.RI "\fI
.SH "part in the class"
.PP
\fP"
.ti -1c
.RI "int \fBpCell\fP (const int p)"
.br
.RI "\fIPrint the cell which the particle belong\&. \fP"
.ti -1c
.RI "int \fBFirst\fP (const int c)"
.br
.RI "\fIFirst part in the cell\&. \fP"
.ti -1c
.RI "int \fBNext\fP (const int p)"
.br
.RI "\fINext linked part\&. \fP"
.ti -1c
.RI "int \fBItCell\fP (const int c)"
.br
.RI "\fIIterate in the cell\&. \fP"
.ti -1c
.RI "int \fBIfItCell\fP (const int c)"
.br
.RI "\fIStop the loop and set the counter to zero\&. \fP"
.ti -1c
.RI "int \fBSetCoorNumb\fP (double *Pos, int p)"
.br
.RI "\fIStop the loop and set the counter to zero\&. \fP"
.ti -1c
.RI "int \fBGetNei\fP (double *Pos, int *NeiList)"
.br
.RI "\fIChoose among the different neighbouring lists\&. \fP"
.ti -1c
.RI "void \fBSetCounters\fP (int c)"
.br
.RI "\fISet the counters to the initial position\&. \fP"
.ti -1c
.RI "void \fBPrintCell\fP (const int c)"
.br
.RI "\fIPrint the particles in a cell\&. \fP"
.ti -1c
.RI "void \fBPrintCells\fP ()"
.br
.RI "\fIPrint the the particles in the cells\&. \fP"
.ti -1c
.RI "void \fBSetCurr\fP (int p)"
.br
.RI "\fIGather information of the neighbouring cells\&. \fP"
.ti -1c
.RI "void \fBNextCurr\fP ()"
.br
.RI "\fIIncrease the iterator to the next couple\&. \fP"
.ti -1c
.RI "int \fBIfCurr\fP ()"
.br
.RI "\fITell when the curr loop is over\&. \fP"
.ti -1c
.RI "void \fBDist2Curr\fP (double *DistRel)"
.br
.RI "\fIRetrun the squared current interparticle distance\&. \fP"
.ti -1c
.RI "void \fBPrintList\fP (const int c)"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBPrintLists\fP ()"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBCheckList\fP ()"
.br
.RI "\fICheck the list\&. \fP"
.ti -1c
.RI "void \fBCheckNei\fP (int p)"
.br
.RI "\fICheck the neighbours\&. \fP"
.ti -1c
.RI "void \fBIncrCurr\fP (const int c)"
.br
.RI "\fIIncrement the current part in the cell\&. \fP"
.ti -1c
.RI "void \fBIncrCurrList\fP (const int c)"
.br
.RI "\fIIncrement the current iterators in the cell\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDomCell\fP * \fBCella\fP"
.br
.RI "\fINumber of particles and iterators per cell\&. \fP"
.ti -1c
.RI "\fBDOMAIN_PART\fP * \fBPc\fP"
.br
.RI "\fIList of position of the particles\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Stupid double loop to check the other pair loops\&. 
.PP
Definition at line 382 of file Cubo\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDdDoubleLoop\fP (double Edge[3], int NPart, double CutOff)"

.PP
Allocate\&. Constructor for the domain decomposition with the linked list\&. 
.PP
Definition at line 855 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::Edge, DomDecBasics::InvEdge, DomDecBasics::Mod10, DomDecBasics::NAllocP, DomDecBasics::NCell, DomDecBasics::NPart, DomDecBasics::NSect, DomDecBasics::SetCutOff(), and DomDecBasics::SigErr()\&.
.SH "Member Function Documentation"
.PP 
.SS "void Erase ()"

.PP
Erase the pairlist\&. Empty the records of the cells\&. 
.PP
Definition at line 878 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NCell, and DomDecBasics::NPart\&.
.SS "void AddPart (const int p, double * Pos)"

.PP
Add a particle to the cell c\&. Add a part to the correspondent cell\&. 
.PP
Definition at line 896 of file Cubo\&.cpp\&.
.SS "void RemPart (const int p, double * Pos)"

.PP
Remove a particle form the cell c\&. Remove particle from the cell\&. 
.PP
Definition at line 909 of file Cubo\&.cpp\&.
.SS "void RemPart (const int p)"

.PP
Remove the particle p\&. Remove a part to the correspondent cell\&. 
.PP
Definition at line 931 of file Cubo\&.cpp\&.
.SS "void AddPart (const int p, const int c)"

.PP
Add a particle to the cell c\&. Add a part to the correspondent cell\&. 
.PP
Definition at line 901 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.SS "void RemPart (const int p, const int c)"

.PP
Remove a particle form the cell c\&. Remove a part to the correspondent cell\&. 
.PP
Definition at line 913 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.SS "void MovePart (const int p, double * OldPos, double * NewPos)"

.PP
Move a particle form the cell c1 to the cell c2\&. Shift a particle from one position to its new\&. 
.PP
Definition at line 943 of file Cubo\&.cpp\&.
.SS "void MovePart (const int p, double * NewPos)"

.PP
Move a particle form the cell c1 to the cell c2\&. Shift a particle from one position to its new\&. 
.PP
Definition at line 939 of file Cubo\&.cpp\&.
.SS "int IfItCell (const int c)"

.PP
Stop the loop and set the counter to zero\&. Return 0 when the loop inside the cell is over\&. 
.PP
Definition at line 956 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart, and DomDecBasics::p1Curr\&.
.SS "int SetCoorNumb (double * Pos, int p)"

.PP
Stop the loop and set the counter to zero\&. Coordination number of the particle in the cell\&. 
.PP
Definition at line 891 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::GetCoorNumb()\&.
.SS "void SetCounters (int c)"

.PP
Set the counters to the initial position\&. Set the counters to the first particle of the cell c1 for the first loop\&. 
.PP
Definition at line 947 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::cCurr, DomDecBasics::p1Curr, and DomDecBasics::p2Curr\&.
.SS "void PrintCell (const int c)"

.PP
Print the particles in a cell\&. Print the content of the cell\&. 
.PP
Definition at line 969 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart\&.
.SS "void PrintCells ()"

.PP
Print the the particles in the cells\&. Print the content of all cells\&. 
.PP
Definition at line 976 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NCell, and DomDecBasics::PrintCell()\&.
.SS "void Dist2Curr (double * DistRel)"

.PP
Retrun the squared current interparticle distance\&. Iterate one step and return the position\&. 
.PP
Definition at line 994 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::Edge, DomDecBasics::InvEdge, DomDecBasics::p1Curr, and DomDecBasics::p2Curr\&.
.SS "void IncrCurr (const int c)"

.PP
Increment the current part in the cell\&. Increment the iterator to the next particle\&. 
.PP
Definition at line 961 of file Cubo\&.cpp\&.
.PP
References DomDecBasics::NPart, DomDecBasics::p1Curr, and DomDecBasics::p2Curr\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Allink from the source code\&.
