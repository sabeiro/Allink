.TH "Draw" 3 "Fri Aug 17 2018" "Version v0.1" "Allink" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Draw \- \fBDraw\fP provides the basic configuration of the openGL libraries used in every derived program\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Draw\&.h>\fP
.PP
Inherited by \fBDrEffect\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef void(Draw::* \fBDEPTH_MAP\fP) (double Val, GLfloat *Color)"
.br
.RI "\fIData type for distance/field functions\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBDraw1\fP (void)"
.br
.RI "\fIA scene for debugging\&. \fP"
.ti -1c
.RI "void \fBDMinimal\fP (void)"
.br
.RI "\fIA empty scene (only the list) \fP"
.ti -1c
.RI "void \fBDrTriangles\fP (int NPoint)"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "void \fBShowImage\fP ()"
.br
.RI "\fIDisplays the data stored in pixel\&. \fP"
.ti -1c
.RI "void \fBWindow\fP (int argc, char **argv)"
.br
.RI "\fIInitial definition of the window\&. \fP"
.ti -1c
.RI "void \fBDFigure\fP (void)"
.br
.RI "\fIDefinition of the scene on which the objects will be drawn\&. \fP"
.ti -1c
.RI "void \fBDTimer\fP (int v)"
.br
.RI "\fINot working\&. \fP"
.ti -1c
.RI "void \fBDreshape\fP (int w, int h)"
.br
.RI "\fIPrincipal reshape function\&. \fP"
.ti -1c
.RI "int \fBApplyTexture\fP ()"
.br
.RI "\fIApply the texture to a square\&. \fP"
.ti -1c
.RI "int \fBShowTexture\fP ()"
.br
.RI "\fICall the texture in the scene\&. \fP"
.ti -1c
.RI "void \fBTransform\fP ()"
.br
.RI "\fITransform the system coordinates\&. \fP"
.ti -1c
.RI "void \fBDrCube\fP ()"
.br
.RI "\fILine in a cube\&. \fP"
.ti -1c
.RI "void \fBChooseBlend\fP (int Which)"
.br
.RI "\fIChoose a different blending function\&. \fP"
.ti -1c
.RI "void \fBPutString\fP (double *Pos, char *String)"
.br
.RI "\fIPut a string\&. \fP"
.ti -1c
.RI "void \fBPutString\fP (double Posx, double Posy, double Posz, char *String)"
.br
.RI "\fIPut a string\&. \fP"
.ti -1c
.RI "void \fBNumera\fP (double *Pos, int n)"
.br
.RI "\fIPrint the\&. \fP"
.ti -1c
.RI "void \fBLista\fP (int NSquare)"
.br
.RI "\fIDefinition of the primitives\&. \fP"
.ti -1c
.RI "int \fBDefPoint\fP ()"
.br
.RI "\fIPoint\&. \fP"
.ti -1c
.RI "int \fBDefCube\fP (int NSquare)"
.br
.RI "\fICube\&. \fP"
.ti -1c
.RI "int \fBDefQuad\fP (int NSquare)"
.br
.RI "\fIQuad\&. \fP"
.ti -1c
.RI "int \fBDefCylinder\fP (double Rad, double Height)"
.br
.RI "\fICylinder\&. \fP"
.ti -1c
.RI "int \fBDefMetalCylinder\fP (double Rad, double Height)"
.br
.RI "\fIMetallic cylinder\&. \fP"
.ti -1c
.RI "int \fBDefHexagon\fP ()"
.br
.RI "\fIHexagon\&. \fP"
.ti -1c
.RI "int \fBDefGriglia\fP ()"
.br
.RI "\fIGriglia\&. \fP"
.ti -1c
.RI "int \fBDefWall\fP ()"
.br
.RI "\fIWall\&. \fP"
.ti -1c
.RI "int \fBDefArrow\fP ()"
.br
.RI "\fIArrow\&. \fP"
.ti -1c
.RI "int \fBDefArrowThin\fP ()"
.br
.RI "\fIArrow\&. \fP"
.ti -1c
.RI "int \fBDefTexture\fP ()"
.br
.RI "\fIDefine a simple texture\&. \fP"
.ti -1c
.RI "void \fBInitConstant\fP ()"
.br
.RI "\fIInitializes all the view constants\&. \fP"
.ti -1c
.RI "double \fBNormal\fP (double *v, double *u, double *w, double *n)"
.br
.RI "\fICalculate the normal\&. \fP"
.ti -1c
.RI "void \fBDepthMap\fP (double Val, GLfloat *Color)"
.br
.RI "\fIPointer to a generic function\&. \fP"
.ti -1c
.RI "void \fBDepthMap1\fP (double Val, GLfloat *Color)"
.br
.RI "\fIDepth map\&. \fP"
.ti -1c
.RI "void \fBChooseDepthMap\fP (int n)"
.br
.RI "\fIChoose Depth map\&. \fP"
.ti -1c
.RI "int \fBDefLegend\fP ()"
.br
.RI "\fIDepth map\&. \fP"
.ti -1c
.RI "void \fBDmouse\fP (int button, int state, int x, int y)"
.br
.RI "\fITo launch the menu\&. \fP"
.ti -1c
.RI "void \fBDMouseMove\fP (int x, int y)"
.br
.RI "\fIHow the scene rotate (Camera view should be implemented) \fP"
.ti -1c
.RI "void \fBDspecial\fP (int k, int x, int y)"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "void \fBkeyboardDraw\fP (unsigned char key)"
.br
.RI "\fICombines the key with the functions\&. \fP"
.ti -1c
.RI "void \fBCameraQuat\fP ()"
.br
.RI "\fIQuaternion camera implementation\&. \fP"
.ti -1c
.RI "void \fBChangeSuGiu\fP (GLfloat Movement)"
.br
.RI "\fIMovement up-down\&. \fP"
.ti -1c
.RI "void \fBChangeDxSx\fP (GLfloat Movement)"
.br
.RI "\fIMovement right left\&. \fP"
.ti -1c
.RI "void \fBabort_\fP (const char *s,\&.\&.\&.)"
.br
.RI "\fICheck\&. \fP"
.ti -1c
.RI "int \fBPicture\fP ()"
.br
.RI "\fIWrite a tiff file of the data in pixel\&. \fP"
.ti -1c
.RI "int \fBWritePixel\fP ()"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "int \fBWritePng\fP ()"
.br
.RI "\fIWrite a png file of the data in pixel (not working) \fP"
.ti -1c
.RI "int \fBWritePngwriter\fP ()"
.br
.RI "\fIWrite a png file of the data in pixel (uses libpngwriter) \fP"
.ti -1c
.RI "int \fBOpenImage\fP (const char *FileName)"
.br
.RI "\fIOpen a image to be store in pixel\&. \fP"
.ti -1c
.RI "void \fBReadScript\fP ()"
.br
.RI "\fIReads and draw a script file\&. \fP"
.ti -1c
.RI "void \fBReadConf\fP ()"
.br
.RI "\fIReads and applies external configurations\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDEPTH_MAP\fP \fBDepth_Map\fP"
.br
.RI "\fIPointer to a distance/field function\&. \fP"
.ti -1c
.RI "int \fBImWidth\fP"
.br
.RI "\fIWidth and height of the image\&. \fP"
.ti -1c
.RI "int \fBImHeight\fP"
.br
.ti -1c
.RI "GLfloat \fBspin\fP"
.br
.RI "\fIObsolete\&. \fP"
.ti -1c
.RI "GLfloat \fBangolo\fP"
.br
.ti -1c
.RI "GLfloat \fBdspin\fP"
.br
.ti -1c
.RI "GLfloat \fBxa\fP"
.br
.RI "\fIAngles\&. \fP"
.ti -1c
.RI "GLfloat \fBya\fP"
.br
.ti -1c
.RI "GLfloat \fBza\fP"
.br
.ti -1c
.RI "GLfloat \fBxf\fP"
.br
.RI "\fIOrientation of the light\&. \fP"
.ti -1c
.RI "GLfloat \fByf\fP"
.br
.ti -1c
.RI "GLfloat \fBzf\fP"
.br
.ti -1c
.RI "GLfloat \fBxp\fP"
.br
.RI "\fITranslation, wheel\&. \fP"
.ti -1c
.RI "GLfloat \fByp\fP"
.br
.ti -1c
.RI "GLfloat \fBzp\fP"
.br
.ti -1c
.RI "GLfloat \fBzw\fP"
.br
.ti -1c
.RI "GLfloat \fBxi\fP"
.br
.RI "\fIPosition of the info string\&. \fP"
.ti -1c
.RI "GLfloat \fByi\fP"
.br
.ti -1c
.RI "GLfloat \fBzi\fP"
.br
.ti -1c
.RI "GLfloat \fBxLeg\fP"
.br
.RI "\fIPosition of the legend\&. \fP"
.ti -1c
.RI "GLfloat \fByLeg\fP"
.br
.ti -1c
.RI "GLfloat \fBzLeg\fP"
.br
.ti -1c
.RI "GLfloat \fBdxLeg\fP"
.br
.RI "\fIWidth of the legend\&. \fP"
.ti -1c
.RI "GLfloat \fBdyLeg\fP"
.br
.ti -1c
.RI "GLfloat \fBxl0\fP"
.br
.RI "\fIPosition of the light0\&. \fP"
.ti -1c
.RI "GLfloat \fByl0\fP"
.br
.ti -1c
.RI "GLfloat \fBzl0\fP"
.br
.ti -1c
.RI "GLfloat \fBxl1\fP"
.br
.RI "\fIPosition of the light1\&. \fP"
.ti -1c
.RI "GLfloat \fByl1\fP"
.br
.ti -1c
.RI "GLfloat \fBzl1\fP"
.br
.ti -1c
.RI "GLfloat \fBscale\fP"
.br
.RI "\fIObsolete\&. \fP"
.ti -1c
.RI "GLfloat \fBdscale\fP"
.br
.ti -1c
.RI "GLfloat \fBtscale\fP"
.br
.ti -1c
.RI "GLfloat \fBRback\fP"
.br
.RI "\fIBackground color\&. \fP"
.ti -1c
.RI "GLfloat \fBGback\fP"
.br
.ti -1c
.RI "GLfloat \fBBback\fP"
.br
.ti -1c
.RI "GLfloat \fBAback\fP"
.br
.ti -1c
.RI "GLfloat \fBIncrVisDxSx\fP"
.br
.RI "\fIIncrement visual DxSx, SuGiu\&. \fP"
.ti -1c
.RI "GLfloat \fBIncrVisSuGiu\fP"
.br
.ti -1c
.RI "GLfloat \fBAngleDxSx\fP"
.br
.RI "\fIAngle DxSx, SuGiu\&. \fP"
.ti -1c
.RI "GLfloat \fBAngleSuGiu\fP"
.br
.ti -1c
.RI "double \fBInvScaleUn\fP"
.br
.RI "\fIRescale the three orthogonal directions\&. \fP"
.ti -1c
.RI "double \fBGridStep\fP"
.br
.RI "\fIFiness of the grid\&. \fP"
.ti -1c
.RI "GLuint \fBHexagon\fP"
.br
.RI "\fIRefers to the list of a hexagon\&. \fP"
.ti -1c
.RI "GLuint \fBDrLegend\fP"
.br
.RI "\fIRefers to the list of the legend\&. \fP"
.ti -1c
.RI "GLuint \fBGriglia\fP"
.br
.RI "\fIRefers to the list of the grid\&. \fP"
.ti -1c
.RI "GLuint \fBQuad\fP"
.br
.RI "\fIRefers to the list of the square\&. \fP"
.ti -1c
.RI "GLuint \fBPoint\fP"
.br
.RI "\fIRefers to the list of the point\&. \fP"
.ti -1c
.RI "GLuint \fBCylinder\fP"
.br
.RI "\fIRefers to the list of the cylinder\&. \fP"
.ti -1c
.RI "GLuint \fBMetalCylinder\fP"
.br
.RI "\fIRefers to the list of another cylinder (obsolete) \fP"
.ti -1c
.RI "GLuint \fBParticles\fP"
.br
.RI "\fIRefers to the list of the total position of the particles which will be generated in another program\&. \fP"
.ti -1c
.RI "GLuint \fBScriptList\fP"
.br
.RI "\fIRefers to the list of the objects called by the script file\&. \fP"
.ti -1c
.RI "GLuint \fBGlWall\fP"
.br
.RI "\fIRefers to the list of a wall\&. \fP"
.ti -1c
.RI "GLuint \fBArrow\fP"
.br
.RI "\fIRefers to the list of a arrow\&. \fP"
.ti -1c
.RI "GLuint \fBCube\fP"
.br
.RI "\fIRefers to the list of the texture\&. \fP"
.ti -1c
.RI "GLuint \fBTexture\fP"
.br
.RI "\fIRefers to the list of the texture\&. \fP"
.ti -1c
.RI "GLuint \fBXCenter\fP"
.br
.RI "\fICenter of the frame\&. \fP"
.ti -1c
.RI "GLuint \fBYCenter\fP"
.br
.RI "\fICenter of the frame\&. \fP"
.ti -1c
.RI "int \fBla\fP"
.br
.RI "\fIPuts/removes the box edges\&. \fP"
.ti -1c
.RI "int \fBgr\fP"
.br
.RI "\fIPuts/removes the grid\&. \fP"
.ti -1c
.RI "int \fBlu\fP"
.br
.RI "\fIEnables/disables illumination\&. \fP"
.ti -1c
.RI "int \fBsp\fP"
.br
.RI "\fIEnables/disables spot light\&. \fP"
.ti -1c
.RI "int \fBne\fP"
.br
.RI "\fIEnables/disables fog\&. \fP"
.ti -1c
.RI "int \fBMainWindow\fP"
.br
.RI "\fIRefers to optional different windows\&. \fP"
.ti -1c
.RI "int \fBSubWindow1\fP"
.br
.ti -1c
.RI "int \fBSubWindow2\fP"
.br
.ti -1c
.RI "int \fBDiap\fP"
.br
.RI "\fINumber of frames\&. \fP"
.ti -1c
.RI "int \fBtDiap\fP"
.br
.ti -1c
.RI "int \fBtDiapBase\fP"
.br
.ti -1c
.RI "int \fBIfPoint\fP"
.br
.RI "\fIDecides to draw points or spheres\&. \fP"
.ti -1c
.RI "int \fBIfInfo\fP"
.br
.RI "\fIRemoves the info line\&. \fP"
.ti -1c
.RI "int \fBIfScript\fP"
.br
.RI "\fIIgnores the script file\&. \fP"
.ti -1c
.RI "int \fBIfImage\fP"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "int \fBIfBlend\fP"
.br
.RI "\fIActivate the blending\&. \fP"
.ti -1c
.RI "int \fBIfMaterial\fP"
.br
.RI "\fIActivate the illumination for a specific material\&. \fP"
.ti -1c
.RI "int \fBValues\fP"
.br
.RI "\fINumber of values to divide the edge in squares\&. \fP"
.ti -1c
.RI "int \fBStep\fP"
.br
.RI "\fICurrent step for the picture's name\&. \fP"
.ti -1c
.RI "int \fBWinWidth\fP"
.br
.RI "\fIWidth of the window\&. \fP"
.ti -1c
.RI "int \fBWinHeight\fP"
.br
.RI "\fIHeight of the window\&. \fP"
.ti -1c
.RI "int \fBxRem\fP"
.br
.RI "\fIOld x position of the mouse\&. \fP"
.ti -1c
.RI "int \fByRem\fP"
.br
.RI "\fIOld y position of the mouse\&. \fP"
.ti -1c
.RI "int \fBChangeMouse\fP"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "int \fBNLevel\fP"
.br
.RI "\fILevels of the images data (usually 4=RGBA) \fP"
.ti -1c
.RI "float \fBDiameter\fP"
.br
.RI "\fIObsolete\&. \fP"
.ti -1c
.RI "float \fBStepDiameter\fP"
.br
.ti -1c
.RI "float \fBNanoRad\fP"
.br
.RI "\fIObsolete\&. \fP"
.ti -1c
.RI "float \fBExtraDiam\fP"
.br
.ti -1c
.RI "double \fBEdge\fP [3]"
.br
.RI "\fIBox size\&. \fP"
.ti -1c
.RI "int \fBGridEdge\fP [3]"
.br
.RI "\fINumber of lines per edge\&. \fP"
.ti -1c
.RI "double \fBExtRad\fP"
.br
.RI "\fICylinder radius\&. \fP"
.ti -1c
.RI "double \fBExtHeight\fP"
.br
.RI "\fICylinder height\&. \fP"
.ti -1c
.RI "GLubyte * \fBpixel\fP"
.br
.RI "\fIPrincipal image (always allocated) \fP"
.ti -1c
.RI "char * \fBNumber\fP"
.br
.RI "\fICharacters for the grid\&. \fP"
.ti -1c
.RI "char * \fBframe\fP"
.br
.RI "\fIBoh\&. \fP"
.ti -1c
.RI "char * \fBinfo\fP"
.br
.RI "\fIInfo line\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBDraw\fP provides the basic configuration of the openGL libraries used in every derived program\&. 
.PP
Definition at line 15 of file Draw\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void Numera (double * Pos, int n)"

.PP
Print the\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP number in the position 
.br
\fIPos\fP 
.RE
.PP

.PP
Definition at line 304 of file Draw\&.cpp\&.
.PP
References InvScaleUn, and Number\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Allink from the source code\&.
