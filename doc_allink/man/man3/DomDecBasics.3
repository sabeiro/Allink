.TH "DomDecBasics" 3 "Fri Aug 17 2018" "Version v0.1" "Allink" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DomDecBasics \- All the general functions shared among the different domain decomposition structures\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Cubo\&.h>\fP
.PP
Inherited by \fBDdArray\fP\fC [private]\fP, \fBDdDoubleLoop\fP, \fBDdFixedSize\fP\fC [private]\fP, and \fBDdLinkedList\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDomDecBasics\fP ()"
.br
.RI "\fIAllocate\&. \fP"
.ti -1c
.RI "void \fBSigErr\fP (int Condition, const char *s,\&.\&.\&.)"
.br
.RI "\fIHandle errors\&. \fP"
.ti -1c
.RI "int \fBPosRet\fP (const double Pos[3])"
.br
.RI "\fIRelative position in the cell\&. \fP"
.ti -1c
.RI "int \fBpNPart\fP ()"
.br
.RI "\fI
.SH "part in the class"
.PP
\fP"
.ti -1c
.RI "int \fBpNCell\fP ()"
.br
.RI "\fIPrint the number of cells\&. \fP"
.ti -1c
.RI "int \fBpCella\fP (const double Pos[3])"
.br
.RI "\fI(x,y,z)->n \fP"
.ti -1c
.RI "void \fBpCella\fP (const double Pos[3], int c[4])"
.br
.RI "\fI(x,y,z)->(cx,cy,cz,cTot) \fP"
.ti -1c
.RI "int \fBGetCoorNumb\fP (double *Pos)"
.br
.RI "\fIGet the coordination number\&. \fP"
.ti -1c
.RI "int \fBGetCellCoord\fP (int c, int Coord, int *NeiList)"
.br
.RI "\fIGet the number of the neighbouring cells for the particles close to a wall\&. \fP"
.ti -1c
.RI "int \fBGetCellCoord\fP (double *Pos, int *NeiList)"
.br
.RI "\fIGet the number of the neighbouring cells for the particles close to a wall\&. \fP"
.ti -1c
.RI "int \fBGetCellCh\fP (int c, int *NeiList)"
.br
.RI "\fIGet the number of the neighbouring cells\&. \fP"
.ti -1c
.RI "int \fBGetCell\fP (double *Pos, int *NeiList)"
.br
.RI "\fIGet the number of the neighbouring cells for a ghost particle\&. \fP"
.ti -1c
.RI "void \fBPrintCell\fP (const int c)"
.br
.RI "\fIPrint the content of a cell\&. \fP"
.ti -1c
.RI "void \fBPrintCells\fP ()"
.br
.RI "\fIPrint the the particles in the cells\&. \fP"
.ti -1c
.RI "void \fBPrintList\fP (const int c)"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBPrintLists\fP ()"
.br
.RI "\fIPrint the the particle list in the cells\&. \fP"
.ti -1c
.RI "void \fBCheckList\fP ()"
.br
.RI "\fICheck the list\&. \fP"
.ti -1c
.RI "void \fBCheckNei\fP (int p)"
.br
.RI "\fICheck the neighbours\&. \fP"
.ti -1c
.RI "int \fBSetCutOff\fP (double CutOffExt)"
.br
.RI "\fISet the CutOff\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "double \fBBoundCond\fP [27][3]"
.br
.RI "\fIBoundary condition for the cell consider\&. \fP"
.ti -1c
.RI "int \fBcCurr\fP"
.br
.RI "\fICell where the current particle sits\&. \fP"
.ti -1c
.RI "int \fBNeiListCurr\fP [27]"
.br
.RI "\fINeighbouring list\&. \fP"
.ti -1c
.RI "int \fBNNeiCurr\fP"
.br
.RI "\fINumber of neighbouring cells\&. \fP"
.ti -1c
.RI "int \fBnNeiCurr\fP"
.br
.RI "\fICurrent number of neighbours\&. \fP"
.ti -1c
.RI "int \fBp1Curr\fP"
.br
.RI "\fIReference particle\&. \fP"
.ti -1c
.RI "int \fBp2Curr\fP"
.br
.RI "\fICurrent particle\&. \fP"
.ti -1c
.RI "int \fBIfLoopCurr\fP"
.br
.RI "\fI1 if the loop is over \fP"
.ti -1c
.RI "int \fBMod10\fP [3]"
.br
.RI "\fIModule 10 (nx,ny,nz) -> nc\&. \fP"
.ti -1c
.RI "int \fBNCell\fP"
.br
.RI "\fINumber of cells\&. \fP"
.ti -1c
.RI "int \fBNSect\fP [3]"
.br
.RI "\fINumber of cells per direction\&. \fP"
.ti -1c
.RI "double \fBEdge\fP [3]"
.br
.RI "\fIBox sizes\&. \fP"
.ti -1c
.RI "double \fBInvEdge\fP [3]"
.br
.RI "\fIInverse box size\&. \fP"
.ti -1c
.RI "double \fBCutOff\fP"
.br
.RI "\fICell CutOff\&. \fP"
.ti -1c
.RI "double \fBPosCurr\fP [3]"
.br
.RI "\fIPosition of the current particle\&. \fP"
.ti -1c
.RI "int \fBNAllocP\fP"
.br
.RI "\fINumber of allocated part\&. \fP"
.ti -1c
.RI "int \fBNPart\fP"
.br
.RI "\fITotal number of particle\&. \fP"
.ti -1c
.RI "int \fBNNeighbour\fP"
.br
.RI "\fINumber of neighbours\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
All the general functions shared among the different domain decomposition structures\&. 
.PP
Definition at line 35 of file Cubo\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDomDecBasics\fP ()"

.PP
Allocate\&. Allocator of the general structure\&. 
.PP
Definition at line 17 of file Cubo\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void SigErr (int Condition, const char * s,  \&.\&.\&.)"

.PP
Handle errors\&. Signal an error and exit\&. 
.PP
Definition at line 24 of file Cubo\&.cpp\&.
.PP
Referenced by DdLinkedList::AddPart(), DdLinkedList::Couple(), DdDoubleLoop::DdDoubleLoop(), DdLinkedList::DdLinkedList(), GetCellCh(), GetCellCoord(), DdLinkedList::IncrCurrList(), DdLinkedList::ItCell(), pCella(), DdLinkedList::RemPart(), NeiVertex::Reorder(), DdLinkedList::SetCurr(), and DdLinkedList::SetCurrGhost()\&.
.SS "int pNPart ()"

.PP

.SH "part in the class"
.PP
Number of particles\&. 
.PP
Definition at line 51 of file Cubo\&.cpp\&.
.PP
References NPart\&.
.SS "int pNCell ()"

.PP
Print the number of cells\&. Number of cells\&. 
.PP
Definition at line 55 of file Cubo\&.cpp\&.
.PP
References NCell\&.
.SS "int pCella (const double Pos[3])"

.PP
(x,y,z)->n Return the unique cell identification number for the given position\&. 
.PP
Definition at line 192 of file Cubo\&.cpp\&.
.PP
References Edge, InvEdge, Mod10, NCell, NSect, and SigErr()\&.
.PP
Referenced by DdLinkedList::AddPart(), DdArray::AddPart(), DdFixedSize::AddPart(), GetCell(), GetCellCoord(), DdLinkedList::MovePart(), DdArray::MovePart(), DdFixedSize::MovePart(), DdLinkedList::RemPart(), DdArray::RemPart(), DdFixedSize::RemPart(), DdLinkedList::SetCurrGhost(), DdArray::SwapPart(), and DdFixedSize::SwapPart()\&.
.SS "void pCella (const double Pos[3], int c[4])"

.PP
(x,y,z)->(cx,cy,cz,cTot) Return the unique cell identification number for the given position\&. 
.PP
Definition at line 203 of file Cubo\&.cpp\&.
.PP
References Edge, Mod10, NCell, NSect, and SigErr()\&.
.SS "int GetCoorNumb (double * Pos)"

.PP
Get the coordination number\&. Retrun the coordination number for the given position\&. 
.PP
Definition at line 212 of file Cubo\&.cpp\&.
.PP
References CutOff, Edge, and NSect\&.
.PP
Referenced by GetCellCoord(), DdLinkedList::SetCoorNumb(), and DdDoubleLoop::SetCoorNumb()\&.
.SS "int GetCellCoord (int c, int Coord, int * NeiList)"

.PP
Get the number of the neighbouring cells for the particles close to a wall\&. Coordination number of the particle in the cell, every particle has a flag which tells to which cell border is close to\&.
.PP
Saves computational time\&. 
.PP
Definition at line 121 of file Cubo\&.cpp\&.
.PP
References BoundCond, Mod10, NSect, and SigErr()\&.
.PP
Referenced by GetCellCoord()\&.
.SS "int GetCellCoord (double * Pos, int * NeiList)"

.PP
Get the number of the neighbouring cells for the particles close to a wall\&. Coordination number of the particle in the cell\&. 
.PP
Definition at line 115 of file Cubo\&.cpp\&.
.PP
References GetCellCoord(), GetCoorNumb(), and pCella()\&.
.SS "int GetCellCh (int c, int * NeiList)"

.PP
Get the number of the neighbouring cells\&. Neighbouring cells with periodic boundary conditions\&. 
.PP
Definition at line 64 of file Cubo\&.cpp\&.
.PP
References BoundCond, Mod10, NCell, NSect, and SigErr()\&.
.PP
Referenced by GetCell()\&.
.SS "int GetCell (double * Pos, int * NeiList)"

.PP
Get the number of the neighbouring cells for a ghost particle\&. Return the list of neighbouring cells\&. 
.PP
Definition at line 59 of file Cubo\&.cpp\&.
.PP
References GetCellCh(), and pCella()\&.
.SS "int SetCutOff (double CutOffExt)"

.PP
Set the CutOff\&. Set the cut off of the grid spacing, the cut off should be much smaller than the box size\&. 
.PP
Definition at line 40 of file Cubo\&.cpp\&.
.PP
References CutOff, Edge, and NSect\&.
.PP
Referenced by DdDoubleLoop::DdDoubleLoop(), and DdLinkedList::DdLinkedList()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Allink from the source code\&.
